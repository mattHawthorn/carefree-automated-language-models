---
sequence:
    # underscores
    - op: replace
      args:
         pattern: "_"
         repl: ""
    
    # emails
    - op: replace
      args:
         pattern: "[-a-zA-Z0-9_.+]+@[-a-zA-Z0-9]+\\.[-a-zA-Z0-9.]+"
         repl: " _email_ "
    
    # @username
    - op: replace
      args:
          pattern: "@[-_a-zA-Z0-9]+"
          repl: " _username_ "

    # repeated chars; reduce to 2 max
    - op: replace
      arguments:
          pattern: '([a-zA-Z])\1{2,}'
          repl: '\1\1'

    - op: lower
    
    # replace actual newsgroup names
    - op: replace
      args:
          pattern: "(^|\\s)(alt|comp|misc|rec|sci|soc|talk)([^\\sa-zA-A0-9])[-a-z.]+"
          repl: ' _group_ '
    
    # floating point and ints
    - op: replace
      arguments:
          pattern: '[0-9]+\.?[0-9]*'
          repl: ' _num_ '
          
    # remove quotes
    - op: replace
      arguments:
          pattern: "'*\\s+'*"
          repl: ' '
          
    # all remaining unwanted chars
    - op: replace
      arguments:
          pattern: "[^'_a-zA-Z]"
          repl: ' '
          
    # tokenize on whitespace
    - op: tokenize
      args: 
          name: RegexpTokenizer
          kwargs: 
                pattern: '\s+'
                gaps: true
                discard_empty: true
    
ngrams:
    # put whatever n you like here, or a list of n's like [1,2] if you're collecting
    # multiple lengths, e.g. for a vector-space model
    n: [1]
    max_stopwords: 0
stopwords:
    english.stop
#stopwords: [and,the]          
...
